import { useTranslation } from 'react-i18next';
import { Cell, Column, HeaderCell, Table } from 'rsuite-table';
import 'rsuite-table/dist/css/rsuite-table.css';

export const API = () => {
  const { t } = useTranslation();
  const data = [
    {
      property: <code>title</code>,
      description: t('The title of the button'),
      type: 'string',
    },

    {
      property: <code>type</code>,
      description: t('The type of the button'),
      type: <span><code>primary</code> | <code>default</code> | <code>dashed</code> | <code>text</code> | <code>link</code></span>,
      default: 'default',
    },
    {
      property: <code>icon</code>,
      description: t('Set the icon component of button'),
      type: 'string',
    },
    {
      property: <code>size</code>,
      description: t('The size of the button'),
      type: <span><code>small</code> | <code>large</code></span>
    },
    {
      property: <code>shape</code>,
      description: t('Can be set button shape'),
      type: 'circle',
    },
    {
      property: <code>disabled</code>,
      description: t('Disabled state of button'),
      type: 'boolean',
      default: 'false',
    },
    {
      property: <code>loading</code>,
      description: t('Whether the button is loading'),
      type: 'boolean',
      default: 'false',
    },
    {
      property: <code>onClick</code>,
      description: t('The callback function when the button is clicked'),
      type: 'function',
    },
  ];
  return (
    <div>
      <h3>{t('API')}</h3>
      <p>
        {t(
          `Different button styles can be generated by setting Button properties.`,
        )}
      </p>
      <Table virtualized data={data} autoHeight>
        <Column width={200}>
          <HeaderCell>{t('Property')}</HeaderCell>
          <Cell dataKey="property" />
        </Column>
        <Column width={200} flexGrow={1}>
          <HeaderCell>{t('Description')}</HeaderCell>
          <Cell dataKey="description" />
        </Column>
        <Column width={200} flexGrow={1}>
          <HeaderCell>{t('Type')}</HeaderCell>
          <Cell dataKey="type" />
        </Column>
        <Column width={100}>
          <HeaderCell>{t('Default')}</HeaderCell>
          <Cell dataKey="default" />
        </Column>
      </Table>
    </div>
  );
};

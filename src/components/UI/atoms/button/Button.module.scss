@mixin changeColor($color) {
  border-color: $color;
  background-color: $color;
}

.button {
  appearance: button;
  touch-action: manipulation;
  display: inline-flex;
  position: relative;
  justify-content: center;
  align-items: center;
  padding: 2px 6px;
  border: thin solid transparent;
  border-color: var(--gray-300);
  border-radius: 2px;
  border-style: solid;
  outline: 0;
  user-select: none;
  color: var(--font-color);
  background-color: var(--white);
  cursor: pointer;
  transition: .3s cubic-bezier(.645, .045, .355, 1);
  transition-property: width, height, background-color, border-color, box-shadow;

  // & > :not(i) {
  // 	:global(.button) {
  // 	}
  // }

  /**
   * Type
   */
  &.default,
  &.dashed {
    &:hover {
      border-color: var(--primary-500);
      color: var(--primary-500);
    }
  }

  &.dashed {
    border-style: dashed;
  }

  &.primary {
    @include changeColor(var(--primary-500));

    text-shadow: var(--black-200);
    color: var(--white);
    box-shadow: 0 2px var(--black-50);

    &:hover {
      @include changeColor(var(--primary-400));
    }

    &:active {
      @include changeColor(var(--primary-600));
    }
  }

  &.text,
  &.link {
    border-color: transparent;

    &:hover {
      background-color: var(--black-50);
    }
  }

  &.link {
    color: var(--primary-500);
  }

  /**
   * Shape
   */

  &.circle {
    border-radius: 1000px;
  }

  /**
   * Icon
   */

  i {
    padding: 2px;
    font-size: 14px;
  }

  i + span {
    margin-left: 8px;
    transition: margin-left .15s cubic-bezier(.645, .045, .355, 1);
  }

  /**
   * Loading
   */

  &.loading {
    pointer-events: none;

    &::before {
      @include position-abs(-1px);

      opacity: .35;
      background-color: white;
    }
  }

  /**
   * Size
   */

  &.large {
    height: 40px;
    padding: 4px 24px;
  }

  /**
   * Disabled
   */

  &.disabled {
    opacity: .5 !important;
    pointer-events: none !important;
  }
}

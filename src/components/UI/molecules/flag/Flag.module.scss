$colors: (
  'warning': (
    'background': var(--warning-color),
    'color': var(--font-color),
  ),
  success: (
    'background': var(--success-color),
    'color': var(--font-color-invert),
  ),
  error: (
    'background': var(--error-color),
    'color': var(--font-color-invert),
  ),
);

.flag {
  @each $appearance, $value in $colors {
    &.#{$appearance} {
      color: map-get($value, 'color');
      background-color: map-get($value, 'background');

      a {
        position: relative;
        padding: 4px 8px;
        color: map-get($value, 'color');

        &[href]:hover {
          color: unset;
        }

        &::after {
          @include position-abs(0);

          border-radius: 4px;
          opacity: .1;
          background-color: currentcolor;
        }

        &:active::after {
          opacity: .2;
        }
      }
    }
  }

  display: inline-flex;
  align-items: center;
  width: 384px;
  margin-bottom: 16px;
  padding: 1rem 24px;
  border-radius: 4px;
  box-shadow: var(--shadow-l);
}

.flag-content {
  padding-left: 16px;

  .flag-title {
    font-weight: 600;
    // white-space: nowrap;
    text-overflow: ellipsis;
  }

  .flag-description {
    overflow: auto;
    overflow-wrap: break-word;
    max-height: 100px;
    margin: 0;
  }
}

.flag-action {
  padding-top: .5rem;

  a {
    font-weight: 500;
    color: var(--primary-500);
    cursor: pointer;

    &[href]:hover {
      text-decoration: underline;
      color: var(--primary-600);
    }

    & + a {
      margin-left: 1rem;
    }
  }
}

.flag-icon {
  align-self: start;
}
